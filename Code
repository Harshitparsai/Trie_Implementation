#include<bits/stdc++.h>
using namespace std;
struct TrieNode{
    TrieNode *child[256];
    bool isEnd;
    TrieNode()
    {
        for(int i=0;i<256;i++)
        {
            child[i] = NULL;
        }
        isEnd = false;
    }
};
void insert(TrieNode *root,string s)
{
    for(int i=0;s[i];i++)
    {
        if(root->child[s[i]] == NULL)
        {
            root->child[s[i]] = new TrieNode();
        }
        root = root->child[s[i]];
    }
    root->isEnd = true;
    return;
}
bool search(TrieNode *root,string s)
{
    for(int i=0;s[i];i++)
    {
        if(root->child[s[i]]  == NULL)
        {
            return false;
        }
        root = root->child[s[i]];
    }
    return root->isEnd;
}

bool isEmpty(TrieNode* root)
{
    for (int i = 0; i < 256; i++)
    if (root->child[i])
            return false;
    return true;
}

TrieNode* remove(TrieNode* root, string key, int depth = 0)
{
    if (!root)
        return NULL;
    if (depth == key.size()) {
        if (root->isEndOf)
                root->isEnd = false;
        if (isEmpty(root)) {
                delete (root);
                root = NULL;
            }
    return root;
    }
    int index = key[depth] - 'a';
    root->child[index] =remove(root->child[index], key, depth + 1);
    if (isEmpty(root) && root->isEnd == false) {
    delete (root);
    root = NULL;
    }
    return root;
}

int main()
{
    TrieNode *root = new TrieNode();
    int n;
    string s;
    cin>>n;
    while(n--)
    {   cin>>s;
        insert(root,s);
    }
    if(search(root,"hero1"))
    {
        cout<<"YES";
    }
    else{
        cout<<"NO";
    }
}
